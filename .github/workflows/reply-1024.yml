# This is a basic workflow to help you get started with Actions

name: reply-1024

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
 # push:
 #   branches: [ "main" ]
 # pull_request:
 #   branches: [ "main" ]
  schedule:
    # 分(0-59) 时(0-23) 日(1-31) 月(1-12) 星期(0-6) UTC时间 +8小时为北京时间
    - cron: 40 15 * 8 *
    - cron: 5 4,11,13 * 8 1,2,3,4,5
    - cron: 3 2,6,8,12 * 8 0,6
#    - cron: 5 10 * 8 2



  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt

      - name: reply1024
        if: github.event.schedule == '40 15 * 8 *'
        run: |
          python3 main.py
        env:
          HOST: ${{ secrets.HOST }}
          COOKIES: ${{ secrets.COOKIES }}
          APP_ID: ${{ secrets.APP_ID }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          USER_ID: ${{ secrets.USER_ID }}
          TEMPLATE_ID: ${{ secrets.TEMPLATE_ID }}
          TARGET_URL: ${{ secrets.TARGET_URL }}

      - name: randomreply
        if: github.event.schedule == '5 4,11,13 * 8 1,2,3,4,5' || github.event.schedule == '3 2,6,8,12 * 8 0,6'
        run: |
          python3 randomreply.py
        env:
          HOST: ${{ secrets.HOST }}
          COOKIES: ${{ secrets.COOKIES }}
          APP_ID: ${{ secrets.APP_ID }}
          APP_SECRET: ${{ secrets.APP_SECRET }}
          USER_ID: ${{ secrets.USER_ID }}
          TEMPLATE_ID: ${{ secrets.TEMPLATE_ID }}

#      - name: test
#        if: github.event.schedule == '5 10 * 8 2'
#        run: python3 test.py
#        env:
#          APP_ID: ${{ secrets.APP_ID }}
#          APP_SECRET: ${{ secrets.APP_SECRET }}
#          USER_ID: ${{ secrets.USER_ID }}
#          TEMPLATE_ID: ${{ secrets.TEMPLATE_ID }}

